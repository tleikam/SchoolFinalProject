/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    // JaCoCo plugin for code coverage
    id 'jacoco'
    // Checkstyle plugin for linting
    id 'checkstyle'

    // Spring
    id 'java'
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.1.0'
}

sourceCompatibility = '1.8'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

// Lock Jackson version in Spring
ext['jackson.version'] = '2.12.2'

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.springframework.boot:spring-boot-starter-test', 'org.hamcrest:hamcrest:2.2',
    'org.junit.jupiter:junit-jupiter-params', 'org.mockito:mockito-inline:3.8.0', 
    'org.mockito:mockito-junit-jupiter:3.8.0' 


    //Use Junit Jupiter Engine for Testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre', files('lib/register-v1.0.0.jar'),
    'com.fasterxml.jackson.core:jackson-databind:2.12.2', 'org.springframework.boot:spring-boot-starter-thymeleaf', 
    'org.springframework.boot:spring-boot-starter-web', 'org.springframework.boot:spring-boot-starter-validation'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

application {
    // Define the main class for the application.
    //mainClass = 'evenbetterpurchase.App'
    mainClass = 'evenbetterpurchase.Web'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Configure Jacoco plugin
test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/reports/jacoco")
    }
}

// Add tests to Javadoc
javadoc {
  classpath += project.sourceSets.test.compileClasspath
  source += project.sourceSets.test.allJava
}

// Force Checkstyle to be more current version
checkstyle {
    toolVersion '10.6.0'
}
